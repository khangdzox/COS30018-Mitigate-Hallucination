

  1%|█▎                                                                                                                                        | 1/110 [00:07<13:01,  7.17s/it]
{'loss': 1.9336, 'grad_norm': nan, 'learning_rate': 0.0, 'epoch': 0.0}


  3%|███▊                                                                                                                                      | 3/110 [00:17<10:11,  5.72s/it]

  4%|█████                                                                                                                                     | 4/110 [00:21<08:45,  4.96s/it]

  5%|██████▎                                                                                                                                   | 5/110 [00:25<07:55,  4.53s/it]

  5%|███████▌                                                                                                                                  | 6/110 [00:29<07:24,  4.27s/it]

  6%|████████▊                                                                                                                                 | 7/110 [00:33<07:12,  4.20s/it]

  7%|██████████                                                                                                                                | 8/110 [00:37<07:07,  4.19s/it]

  8%|███████████▎                                                                                                                              | 9/110 [00:41<07:03,  4.20s/it]

  9%|████████████▍                                                                                                                            | 10/110 [00:45<07:00,  4.20s/it]
{'loss': 2.279, 'grad_norm': 4.717203617095947, 'learning_rate': 0.00019995524322835034, 'epoch': 0.0}

 10%|█████████████▋                                                                                                                           | 11/110 [00:50<07:16,  4.41s/it]

 11%|██████████████▉                                                                                                                          | 12/110 [00:56<07:48,  4.78s/it]

 12%|████████████████▏                                                                                                                        | 13/110 [01:03<09:09,  5.67s/it]Traceback (most recent call last):
  File "c:\Users\pink\Documents\Study\Intelligent Systems\COS30018-Mitigate-Hallucination\Finetuning\LLAMA3_QLoRA.py", line 245, in <module>
    main()
  File "c:\Users\pink\Documents\Study\Intelligent Systems\COS30018-Mitigate-Hallucination\Finetuning\LLAMA3_QLoRA.py", line 241, in main
    trainer.train()
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\trl\trainer\sft_trainer.py", line 451, in train
    output = super().train(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 1948, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 2289, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 3359, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\accelerate\accelerator.py", line 2155, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\autograd\__init__.py", line 289, in backward
    _engine_run_backward(
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\autograd\graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt