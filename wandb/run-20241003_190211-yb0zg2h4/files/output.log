

  1%|█▏                                                                                                                                      | 1/110 [01:16<2:19:23, 76.73s/it]

  2%|██▍                                                                                                                                     | 2/110 [02:27<2:11:48, 73.23s/it]

  3%|███▋                                                                                                                                    | 3/110 [03:23<1:56:14, 65.18s/it]

  4%|████▉                                                                                                                                   | 4/110 [04:11<1:43:36, 58.64s/it]

  5%|██████▏                                                                                                                                 | 5/110 [04:58<1:35:26, 54.54s/it]

  5%|███████▍                                                                                                                                | 6/110 [05:46<1:30:37, 52.28s/it]

  6%|████████▋                                                                                                                               | 7/110 [06:37<1:29:05, 51.90s/it]

  7%|█████████▉                                                                                                                              | 8/110 [07:28<1:27:14, 51.32s/it]

  8%|███████████▏                                                                                                                            | 9/110 [08:14<1:24:03, 49.93s/it]

  9%|████████████▎                                                                                                                          | 10/110 [09:01<1:21:19, 48.79s/it]

 10%|█████████████▌                                                                                                                         | 11/110 [09:47<1:19:25, 48.13s/it]
{'loss': 2.0073, 'grad_norm': 4.431910037994385, 'learning_rate': 6.363636363636364e-05, 'epoch': 0.0}


 12%|███████████████▉                                                                                                                       | 13/110 [10:52<1:04:25, 39.85s/it]
{'loss': 1.8862, 'grad_norm': nan, 'learning_rate': 6.363636363636364e-05, 'epoch': 0.0}


 14%|██████████████████▋                                                                                                                      | 15/110 [11:53<55:13, 34.88s/it]

 15%|███████████████████▉                                                                                                                     | 16/110 [12:22<52:18, 33.39s/it]
 15%|███████████████████▉                                                                                                                     | 16/110 [12:22<52:18, 33.39s/it]Traceback (most recent call last):
  File "c:\Users\pink\Documents\Study\Intelligent Systems\COS30018-Mitigate-Hallucination\Finetuning\LLAMA3_LoRA.py", line 218, in <module>
    main()
  File "c:\Users\pink\Documents\Study\Intelligent Systems\COS30018-Mitigate-Hallucination\Finetuning\LLAMA3_LoRA.py", line 214, in main
    trainer.train()
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\trl\trainer\sft_trainer.py", line 451, in train
    output = super().train(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 1948, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 2289, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\transformers\trainer.py", line 3359, in training_step
    self.accelerator.backward(loss, **kwargs)
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\accelerate\accelerator.py", line 2155, in backward
    self.scaler.scale(loss).backward(**kwargs)
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\autograd\__init__.py", line 289, in backward
    _engine_run_backward(
  File "C:\Users\pink\anaconda3\envs\LLama3-hallucinate\Lib\site-packages\torch\autograd\graph.py", line 768, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt